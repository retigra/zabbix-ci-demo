zabbix_export:
  version: '7.2'
  template_groups:
  - uuid: a571c0d144b14fd4a87a9d9b2aa9fcd6
    name: Templates/Applications
  templates:
  - uuid: 8c8474148c2a4eaeabe5a9331ea99d77
    template: RabbitMQ cluster by HTTP
    name: RabbitMQ cluster by HTTP
    description: |
      This template is developed to monitor the messaging broker RabbitMQ cluster by Zabbix that works without any external scripts.
      Most of the metrics are collected in one go, thanks to Zabbix bulk data collection.

      The template collects metrics by polling RabbitMQ management plugin with HTTP agent remotely.

      Setup:

      1. Enable the RabbitMQ management plugin. See the RabbitMQ documentation for the instructions:
      https://www.rabbitmq.com/management.html

      2. Create a user to monitor the service:

      rabbitmqctl add_user zbx_monitor <PASSWORD>
      rabbitmqctl set_permissions  -p / zbx_monitor "" "" ".*"
      rabbitmqctl set_user_tags zbx_monitor monitoring

      3. Set the hostname or IP address of the RabbitMQ cluster host in the '{$RABBITMQ.API.CLUSTER_HOST}' macro. You can also change the port in the '{$RABBITMQ.API.PORT}' macro and the scheme in the '{$RABBITMQ.API.SCHEME}' macro if necessary.

      4. Set the user name and password in the macros '{$RABBITMQ.API.USER}' and '{$RABBITMQ.API.PASSWORD}'.

      You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387226-discussion-thread-for-official-zabbix-template-rabbitmq

      Generated by official Zabbix template tool "Templator"
    vendor:
      name: Zabbix
      version: 7.2-1
    groups:
    - name: Templates/Applications
    items:
    - uuid: dd74265fcc2d48e2b160e749706c9a6c
      name: Get exchanges
      type: HTTP_AGENT
      key: rabbitmq.get_exchanges
      history: 1h
      value_type: TEXT
      authtype: BASIC
      username: '{$RABBITMQ.API.USER}'
      password: '{$RABBITMQ.API.PASSWORD}'
      description: The HTTP API endpoint that returns exchanges metrics.
      url: '{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/exchanges'
      tags:
      - tag: component
        value: raw
    - uuid: c0d7c1940dea4cd4a01a94b9629db3ce
      name: Get overview
      type: HTTP_AGENT
      key: rabbitmq.get_overview
      history: 1h
      value_type: TEXT
      authtype: BASIC
      username: '{$RABBITMQ.API.USER}'
      password: '{$RABBITMQ.API.PASSWORD}'
      description: The HTTP API endpoint that returns cluster-wide metrics.
      url: '{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview'
      tags:
      - tag: component
        value: raw
      triggers:
      - uuid: ae7f1953f9b94c9c907d7bd7627d389d
        expression: nodata(/RabbitMQ cluster by HTTP/rabbitmq.get_overview,30m)=1
        name: 'RabbitMQ cluster: Failed to fetch overview data'
        event_name: 'RabbitMQ cluster: Failed to fetch overview data (or no data for
          30m)'
        priority: WARNING
        description: Zabbix has not received any data for items for the last 30 minutes.
        manual_close: YES
        tags:
        - tag: scope
          value: availability
    - uuid: 94ffc83030e84d93a2bcafc9fc1b307b
      name: Messages acknowledged
      type: DEPENDENT
      key: rabbitmq.overview.messages.ack
      description: The number of messages delivered to clients and acknowledged.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.ack
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: b7c9ca566af64e62bc450752d5cd7777
      name: Messages acknowledged per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.ack.rate
      value_type: FLOAT
      description: The rate of messages (per second) delivered to clients and acknowledged.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.ack_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 5f2ae9a4ca0643c6b3d3e7b1ed36f3e4
      name: Messages confirmed
      type: DEPENDENT
      key: rabbitmq.overview.messages.confirm
      description: The count of confirmed messages.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.confirm
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 302caaded1ec40a984c13c3eab6f7509
      name: Messages confirmed per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.confirm.rate
      value_type: FLOAT
      description: The rate of messages confirmed per second.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.confirm_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: fa4dcdd9a76c47fb8b3e0e238077f591
      name: Messages delivered
      type: DEPENDENT
      key: rabbitmq.overview.messages.deliver_get
      description: 'The sum of messages delivered to consumers: in acknowledgement
        mode and in no-acknowledgement mode; delivered to consumers in response to
        the `basic.get`: in acknowledgement mode and in no-acknowledgement mode.'
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.deliver_get
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 483b3ccd192a4f7a8142da5fc3303d63
      name: Messages delivered per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.deliver_get.rate
      value_type: FLOAT
      description: 'The rate of the sum of messages (per second) delivered to consumers:
        in acknowledgement mode and in no-acknowledgement mode; delivered to consumers
        in response to the `basic.get`: in acknowledgement mode and in no-acknowledgement
        mode.'
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.deliver_get_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: af401642e23241f38b453ce65439a3fb
      name: Messages published
      type: DEPENDENT
      key: rabbitmq.overview.messages.publish
      description: The count of published messages.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.publish
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: e386d202d87c442c94ea6151af8f1c45
      name: Messages published per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.publish.rate
      value_type: FLOAT
      description: The rate of messages published per second.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.publish_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: ebe18f0f04fe4c098283cfeab6ebb716
      name: Messages publish_in
      type: DEPENDENT
      key: rabbitmq.overview.messages.publish_in
      description: The count of messages published from the channels into this overview.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.publish_in
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 8078d1269b0f4650b2a2c8d0f7de8bfd
      name: Messages publish_in per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.publish_in.rate
      value_type: FLOAT
      description: The rate of messages (per second) published from the channels into
        this overview.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.publish_in_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 8d5523cd5120462f903af9b67e2abb10
      name: Messages publish_out
      type: DEPENDENT
      key: rabbitmq.overview.messages.publish_out
      description: The count of messages published from this overview into queues.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.publish_out
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: c1a7ca5a475449b4b4d916693acd515b
      name: Messages publish_out per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.publish_out.rate
      value_type: FLOAT
      description: The rate of messages (per second) published from this overview
        into queues.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.publish_out_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 6c0d428069a84443affba5b1a7f886bc
      name: Messages returned redeliver
      type: DEPENDENT
      key: rabbitmq.overview.messages.redeliver
      description: The count of subset of messages in the `deliver_get`, which had
        the `redelivered` flag set.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.redeliver
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 7d239c3cb6604521b1291bce0dbdf10c
      name: Messages returned redeliver per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.redeliver.rate
      value_type: FLOAT
      description: The rate of subset of messages (per second) in the `deliver_get`,
        which had the `redelivered` flag set.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.redeliver_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 70ab0718b7784a8280c99b6af21d909a
      name: Messages returned unroutable
      type: DEPENDENT
      key: rabbitmq.overview.messages.return_unroutable
      description: The count of messages returned to a publisher as unroutable.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.return_unroutable
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: e2983b5d27294b92b658070e0ef0a2ca
      name: Messages returned unroutable per second
      type: DEPENDENT
      key: rabbitmq.overview.messages.return_unroutable.rate
      value_type: FLOAT
      description: The rate of messages (per second) returned to a publisher as unroutable.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.message_stats.return_unroutable_details.rate
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 787ea966afd741b99bbdce665aebf15a
      name: Channels total
      type: DEPENDENT
      key: rabbitmq.overview.object_totals.channels
      description: The total number of channels.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.object_totals.channels
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: channels
    - uuid: 3b488cdb79ac4b95abe55ddec9f74dd1
      name: Connections total
      type: DEPENDENT
      key: rabbitmq.overview.object_totals.connections
      description: The total number of connections.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.object_totals.connections
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: connections
    - uuid: 4b02b27b8091430eb80e6451935848d8
      name: Consumers total
      type: DEPENDENT
      key: rabbitmq.overview.object_totals.consumers
      description: The total number of consumers.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.object_totals.consumers
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: consumers
    - uuid: 1b98a03a243c4b698faa93228cb9cfb0
      name: Exchanges total
      type: DEPENDENT
      key: rabbitmq.overview.object_totals.exchanges
      description: The total number of exchanges.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.object_totals.exchanges
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: exchanges
    - uuid: 011491d6f5954cf3bf37ee45a62a4d86
      name: Queues total
      type: DEPENDENT
      key: rabbitmq.overview.object_totals.queues
      description: The total number of queues.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.object_totals.queues
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: queues
    - uuid: c9bc0b0a61be4412bfc31cb725bbe837
      name: Messages total
      type: DEPENDENT
      key: rabbitmq.overview.queue_totals.messages
      description: The total number of messages (ready, plus unacknowledged).
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.queue_totals.messages
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 7c7e5c4111ff464b913a43b59fcb2e9b
      name: Messages ready for delivery
      type: DEPENDENT
      key: rabbitmq.overview.queue_totals.messages.ready
      description: The number of messages ready for delivery.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.queue_totals.messages_ready
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    - uuid: 3403648d6b964edd8c390e2c175b068a
      name: Messages unacknowledged
      type: DEPENDENT
      key: rabbitmq.overview.queue_totals.messages.unacknowledged
      description: The number of unacknowledged messages.
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.queue_totals.messages_unacknowledged
        error_handler: CUSTOM_VALUE
        error_handler_params: '0'
      master_item:
        key: rabbitmq.get_overview
      tags:
      - tag: component
        value: messages
    discovery_rules:
    - uuid: 689cf8096c0c49099e2b56c5b639d3c6
      name: Exchanges discovery
      type: DEPENDENT
      key: rabbitmq.exchanges.discovery
      filter:
        evaltype: AND
        conditions:
        - macro: '{#EXCHANGE}'
          value: '{$RABBITMQ.LLD.FILTER.EXCHANGE.MATCHES}'
        - macro: '{#EXCHANGE}'
          value: '{$RABBITMQ.LLD.FILTER.EXCHANGE.NOT_MATCHES}'
          operator: NOT_MATCHES_REGEX
      description: The metrics for an individual exchange.
      item_prototypes:
      - uuid: d8cdcef7ad324aebb597e9d2cd32bdf2
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages acknowledged per
          second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.ack.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of messages (per second) delivered to clients and acknowledged.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.ack_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: fd3d7de712d84721a09248670a7504f1
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages acknowledged'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.ack["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The number of messages delivered to clients and acknowledged.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.ack
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: bc57ae1a1c1d4e9c96a268906d88dbf8
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages confirmed per second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.confirm.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of messages confirmed per second.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.confirm_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 8fac23c225d449b3a01d495b52131f5c
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages confirmed'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.confirm["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The count of confirmed messages.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.confirm
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 18916e7d0fce41d698f57f0f1be5dab1
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages delivered per second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.deliver_get.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: 'The rate of the sum of messages (per second) delivered to consumers:
          in acknowledgement mode and in no-acknowledgement mode; delivered to consumers
          in response to the `basic.get`: in acknowledgement mode and in no-acknowledgement
          mode.'
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.deliver_get_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: b86cc017bbb247b79e5b0522cf895d33
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages delivered'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.deliver_get["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: 'The sum of messages delivered to consumers: in acknowledgement
          mode and in no-acknowledgement mode; delivered to consumers in response
          to the `basic.get`: in acknowledgement mode and in no-acknowledgement mode.'
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.deliver_get
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: a4a890d6cbdc40528dee488d8649343d
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages published per second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.publish.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of messages published per second.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.publish_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 24515b4712014fbeb857592664624be3
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages published'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.publish["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The count of published messages.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.publish
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: d7ecda9c49ee479481b0b96d92113064
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_in per
          second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.publish_in.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of messages (per second) published from the channels
          into this overview.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.publish_in_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 02ebc8dacc0b44cd81bd9a83394359ff
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_in'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.publish_in["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The count of messages published from the channels into this overview.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.publish_in
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 46a5efc69f2e4928b5744b5ea0cd6ae3
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_out per
          second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.publish_out.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of messages (per second) published from this overview
          into queues.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.publish_out_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: c83921ac67074e169e247dc3392213cf
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_out'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.publish_out["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The count of messages published from this overview into queues.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.publish_out
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 64bc6c65cc2f46b1841bd9852020bf44
        name: 'Exchange {#VHOST}/{#EXCHANGE}/{#TYPE}: Messages redelivered per second'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.redeliver.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of subset of messages (per second) in the `deliver_get`,
          which had the `redelivered` flag set.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.redeliver_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 3203320d008d484d917827f93b213725
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages redelivered'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.redeliver["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The count of subset of messages in the `deliver_get`, which had
          the `redelivered` flag set.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.redeliver
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 1aad46c39cc347f59ed953aa6bc23fbe
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages returned unroutable
          per second'
        type: DEPENDENT
        key: 
          rabbitmq.exchange.messages.return_unroutable.rate["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        value_type: FLOAT
        description: The rate of messages (per second) returned to a publisher as
          unroutable.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.return_unroutable_details.rate
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: caaaf925f72e42d2b3112098bd05b3d1
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages returned unroutable'
        type: DEPENDENT
        key: rabbitmq.exchange.messages.return_unroutable["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        description: The count of messages returned to a publisher as unroutable.
        preprocessing:
        - type: JSONPATH
          parameters:
          - $.message_stats.return_unroutable
          error_handler: CUSTOM_VALUE
          error_handler_params: '0'
        master_item:
          key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        tags:
        - tag: component
          value: messages
        - tag: exchange
          value: '{#EXCHANGE}'
        - tag: type
          value: '{#TYPE}'
        - tag: vhost
          value: '{#VHOST}'
      - uuid: 54ec0943af1b4c0c807bcc222f5d70c7
        name: 'Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Get data'
        type: DEPENDENT
        key: rabbitmq.get_exchanges["{#VHOST}/{#EXCHANGE}/{#TYPE}"]
        history: '0'
        value_type: TEXT
        description: The HTTP API endpoint that returns [{#VHOST}][{#EXCHANGE}][{#TYPE}]
          exchanges metrics
        preprocessing:
        - type: JSONPATH
          parameters:
          - $[?(@.name == "{#EXCHANGE}" && @.vhost == "{#VHOST}" && @.type =="{#TYPE}")].first()
        master_item:
          key: rabbitmq.get_exchanges
        tags:
        - tag: component
          value: raw
      master_item:
        key: rabbitmq.get_exchanges
      lld_macro_paths:
      - lld_macro: '{#EXCHANGE}'
        path: $.name
      - lld_macro: '{#TYPE}'
        path: $.type
      - lld_macro: '{#VHOST}'
        path: $.vhost
      preprocessing:
      - type: JAVASCRIPT
        parameters:
        - return JSON.stringify(JSON.parse(value),['name','type','vhost']);
      - type: DISCARD_UNCHANGED_HEARTBEAT
        parameters:
        - 1h
    - uuid: 8655f85b65cc4eb0a0470db45ca1c963
      name: Health Check 3.8.10+ discovery
      type: DEPENDENT
      key: rabbitmq.healthcheck.v3810.discovery
      description: 'Specific metrics for the versions: up to and including 3.8.10.'
      item_prototypes:
      - uuid: 90db70de99454f7b924d84174a5951fb
        name: 'Healthcheck: alarms in effect in the cluster{#SINGLETON}'
        type: HTTP_AGENT
        key: rabbitmq.healthcheck.alarms[{#SINGLETON}]
        authtype: BASIC
        username: '{$RABBITMQ.API.USER}'
        password: '{$RABBITMQ.API.PASSWORD}'
        description: Responds a 200 OK if there are no alarms in effect in the cluster,
          otherwise responds with a 503 Service Unavailable.
        valuemap:
          name: RabbitMQ healthcheck
        preprocessing:
        - type: REGEX
          parameters:
          - HTTP\/1\.1\b\s(\d+)
          - \1
        - type: JAVASCRIPT
          parameters:
          - |
            switch(value){
            case '200': return 1
            case '503': return 0
            default: 2}
        - type: DISCARD_UNCHANGED_HEARTBEAT
          parameters:
          - 3h
        url: '{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/health/checks/alarms'
        status_codes: 200,503,404
        retrieve_mode: HEADERS
        tags:
        - tag: component
          value: health
        - tag: component
          value: system
        trigger_prototypes:
        - uuid: 58592bb4d473497e9942634db2001823
          expression: last(/RabbitMQ cluster by HTTP/rabbitmq.healthcheck.alarms[{#SINGLETON}])=0
          name: 'RabbitMQ cluster: There are active alarms in the cluster'
          opdata: 'Current state: {ITEM.LASTVALUE1}'
          priority: AVERAGE
          description: 'This is the default API endpoint path: http://{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/index.html.'
          tags:
          - tag: scope
            value: notice
      master_item:
        key: rabbitmq.get_overview
      preprocessing:
      - type: JSONPATH
        parameters:
        - $.management_version
      - type: JAVASCRIPT
        parameters:
        - |
          var rabbit_version = parseInt(value.split('.')[0]) * 10000 +
          	parseInt(value.split('.')[1]) * 100 +
          	parseInt(value.split('.')[2]);
          return JSON.stringify(rabbit_version >= 30810 ? [{ '{#SINGLETON}': '' }] : []);
      - type: DISCARD_UNCHANGED_HEARTBEAT
        parameters:
        - 1h
    tags:
    - tag: class
      value: software
    - tag: target
      value: rabbitmq
    macros:
    - macro: '{$RABBITMQ.API.CLUSTER_HOST}'
      value: <SET CLUSTER API HOST>
      description: The hostname or IP of the API endpoint for the RabbitMQ cluster.
    - macro: '{$RABBITMQ.API.PASSWORD}'
      value: zabbix
    - macro: '{$RABBITMQ.API.PORT}'
      value: '15672'
      description: The port of the RabbitMQ API endpoint.
    - macro: '{$RABBITMQ.API.SCHEME}'
      value: http
      description: The request scheme, which may be HTTP or HTTPS.
    - macro: '{$RABBITMQ.API.USER}'
      value: zbx_monitor
    - macro: '{$RABBITMQ.LLD.FILTER.EXCHANGE.MATCHES}'
      value: .*
      description: This macro is used in the discovery of exchanges. It can be overridden
        at host level or its linked template level.
    - macro: '{$RABBITMQ.LLD.FILTER.EXCHANGE.NOT_MATCHES}'
      value: CHANGE_IF_NEEDED
      description: This macro is used in the discovery of exchanges. It can be overridden
        at host level or its linked template level.
    valuemaps:
    - uuid: 3380e05a15774dad92e77c983448698b
      name: RabbitMQ healthcheck
      mappings:
      - value: '0'
        newvalue: Failed
      - value: '1'
        newvalue: Ok
      - value: '2'
        newvalue: Error
